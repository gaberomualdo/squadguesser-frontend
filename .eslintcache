[{"/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js":"1","/Users/fred/Desktop/code/squadguessr/src/App.js":"2","/Users/fred/Desktop/code/squadguessr/src/components/index.js":"3","/Users/fred/Desktop/code/squadguessr/src/index.js":"4","/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js":"5","/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js":"6","/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js":"7","/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js":"8","/Users/fred/Desktop/code/squadguessr/src/pages/index.js":"9","/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js":"10","/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js":"11","/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js":"12","/Users/fred/Desktop/code/squadguessr/src/lib/config.js":"13","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js":"14","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/game.js":"15","/Users/fred/Desktop/code/squadguessr/src/components/PlayButton/index.js":"16","/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js":"17","/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js":"18"},{"size":362,"mtime":1606439571342,"results":"19","hashOfConfig":"20"},{"size":3912,"mtime":1608671105113,"results":"21","hashOfConfig":"20"},{"size":304,"mtime":1608308411204,"results":"22","hashOfConfig":"20"},{"size":492,"mtime":1608355112027,"results":"23","hashOfConfig":"20"},{"size":4747,"mtime":1608780047579,"results":"24","hashOfConfig":"20"},{"size":293,"mtime":1607894660401,"results":"25","hashOfConfig":"20"},{"size":507,"mtime":1608408973758,"results":"26","hashOfConfig":"20"},{"size":341,"mtime":1607834454317,"results":"27","hashOfConfig":"20"},{"size":147,"mtime":1608413668951,"results":"28","hashOfConfig":"20"},{"size":282,"mtime":1607885588163,"results":"29","hashOfConfig":"20"},{"size":5593,"mtime":1608760889463,"results":"30","hashOfConfig":"20"},{"size":267,"mtime":1608337971859,"results":"31","hashOfConfig":"20"},{"size":85,"mtime":1608411683447,"results":"32","hashOfConfig":"20"},{"size":3151,"mtime":1608525620678,"results":"33","hashOfConfig":"20"},{"size":14508,"mtime":1608566253055,"results":"34","hashOfConfig":"20"},{"size":464,"mtime":1608415059883,"results":"35","hashOfConfig":"20"},{"size":993,"mtime":1608482194438,"results":"36","hashOfConfig":"20"},{"size":667,"mtime":1608483396909,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1vykj9n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js",[],["77","78"],"/Users/fred/Desktop/code/squadguessr/src/App.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/index.js",["79"],"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js",["80"],"/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/config.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js",["81"],"/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from 'react';\nimport { APIBaseURL } from '../../lib/config';\nimport Game from './game';\nimport { PlayButton } from '../../components/';\nimport './index-styles.css';\nimport { fromBase64, toBase64 } from '../../lib/utils';\n\nconst urlLeagueParam = 'league';\n\nconst leagueDescriptions = {\n  'All Teams': <>Up for a challenge? Guess from 200+ teams &rarr;</>,\n  'Top 25 Teams': <>Guess from the greatest teams right now &rarr;</>,\n  'Premier League': <>England's first division, the biggest league &rarr;</>,\n  'La Liga': <>Spanish league home to Barcelona and Real Madrid &rarr;</>,\n  Bundesliga: <>Germany's league, with Bayern Munchen and more &rarr;</>,\n  'Serie A TIM': <>Italian league with famous players like Ronaldo &rarr;</>,\n  'Ligue 1': <>French league with Neymar, Mbappe, and more &rarr;</>,\n  Eredivisie: <>Dutch league home to Ajax, PSV, and more &rarr;</>,\n  'Liga NOS': <>Portugal's league with Benfica and Porto &rarr;</>,\n  'SÃ¼per Lig': <>Turkish league with Galatasaray and more &rarr;</>,\n  Libertadores: <>South American league &rarr;</>,\n  'Scottish Prem': <>Scottish league &rarr;</>,\n  'EFL Championship': <>England's second division &rarr;</>,\n};\n\nexport default function ByNationalityPage(props) {\n  const [league, setLeague] = useState('');\n  const [leagues, setLeagues] = useState([]);\n\n  const updateLeagueFromURLParam = (leaguesArr) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has(urlLeagueParam)) {\n      const param = urlParams.get(urlLeagueParam);\n      try {\n        const decodedParam = fromBase64(param);\n        if (leaguesArr.indexOf(decodedParam) > -1 && league !== decodedParam) {\n          setLeague(decodedParam);\n        }\n      } catch (err) {}\n    } else if (league !== '') {\n      setLeague('');\n    }\n  };\n\n  if (leagues) {\n    updateLeagueFromURLParam(leagues);\n  }\n\n  useEffect(() => {\n    (async () => {\n      const data = await (await fetch(`${APIBaseURL}/leagues`)).json();\n      updateLeagueFromURLParam(data);\n      setLeagues(data);\n    })();\n  }, []);\n\n  const setLeagueAndParam = (leagueName) => {\n    const leagueNameCode = toBase64(leagueName);\n    const url = new URL(window.location.href);\n    url.searchParams.delete('game');\n    url.searchParams.set(urlLeagueParam, leagueNameCode);\n    const urlStr = url.toString();\n    window.open(urlStr, '_self');\n  };\n\n  return leagues.length > 0 ? (\n    league ? (\n      <Game league={league} setPage={props.setPage} />\n    ) : (\n      <div className='bynationalitypage-selectleague fullheight-section'>\n        <div className='inner'>\n          <h1 className='title'>Choose a League:</h1>\n          {leagues.map((e, i) => {\n            return (\n              <PlayButton\n                onClick={() => setLeagueAndParam(e)}\n                key={i}\n                name={e}\n                description={leagueDescriptions[e] ? leagueDescriptions[e] : <>play this league &rarr;</>}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n  ) : (\n    <div className='fullheight-section'></div>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/game.js",["82"],"/* eslint-disable no-restricted-globals */\nimport './game-styles/misc.css';\nimport './game-styles/guessteam.css';\nimport './game-styles/formation.css';\nimport './game-styles/pitch.css';\nimport './game-styles/pitch-top.css';\nimport './game-styles/extras-section.css';\nimport './game-styles/mobile.css';\nimport { PrimaryButton, TertiaryButton } from '../../components';\nimport React, { useState, useEffect } from 'react';\nimport commaNumber from 'comma-number';\nimport { APIBaseURL } from '../../lib/config';\nimport { toBase64, fromBase64 } from '../../lib/utils';\n\nconst halfStar = (\n  <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n    <path d='M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524v-12.005zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z' />\n  </svg>\n);\nconst fullStar = (\n  <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n    <path d='M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z' />\n  </svg>\n);\nconst emptyStar = (\n  <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n    <path d='M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z' />\n  </svg>\n);\nconst urlGameParam = 'game';\n\nexport default function ByNationalityGame(props) {\n  const [gameData, setGameData] = useState({\n    wrongTeams: [],\n    teamFormation: [],\n    correctTeam: '',\n    teams: [],\n    doneGuessing: false,\n  });\n\n  const [showRatings, setShowRatings] = useState(false);\n  const [showTransferBudget, setShowTransferBudget] = useState(false);\n  const [nameLettersShown, setNameLettersShown] = useState([]);\n  const [teamsEliminated, setTeamsEliminated] = useState([]);\n  const [activeTab, setActiveTab] = useState('main-section');\n\n  const guessTeam = (e) => {\n    if (e === gameData.correctTeam) {\n      setGameData({ ...gameData, doneGuessing: true });\n    } else {\n      setGameData({ ...gameData, wrongTeams: [...gameData.wrongTeams, e] });\n    }\n  };\n\n  const newTeam = async (gameCode = '', onlyUpdateWithGameCode = false) => {\n    const { league } = props;\n    const data = await (await fetch(`${APIBaseURL}/teams/by-league/${league}`)).json();\n    let teamAPIURL = `${APIBaseURL}/team/random/by-league/${league}`;\n    const teamNames = data.map((e) => e.name);\n\n    if (gameCode) {\n      let gameCodeWasValid = false;\n      try {\n        const decodedTeam = fromBase64(gameCode);\n        if (teamNames.indexOf(decodedTeam) > -1) {\n          teamAPIURL = `${APIBaseURL}/team/${decodedTeam}`;\n          gameCodeWasValid = true;\n        }\n      } catch (err) {}\n      if (!gameCodeWasValid && onlyUpdateWithGameCode) {\n        return;\n      }\n    }\n\n    const { name, formation, ...extraData } = await (await fetch(teamAPIURL)).json();\n\n    if (!gameCode) {\n      const url = new URL(window.location.href);\n      url.searchParams.set(urlGameParam, toBase64(name));\n      const urlStr = url.toString();\n      history.replaceState({}, 'Navigate to New Page', urlStr);\n    }\n\n    setGameData({\n      wrongTeams: [],\n      teamFormation: formation,\n      correctTeam: name,\n      teams: data,\n      ...extraData,\n    });\n    setShowRatings(false);\n    setShowTransferBudget(false);\n    setNameLettersShown([]);\n    setTeamsEliminated([]);\n    setActiveTab('main-section');\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has(urlGameParam)) {\n      const param = urlParams.get(urlGameParam);\n      return newTeam(param);\n    }\n    newTeam();\n  }, []);\n\n  return (\n    <div className='fullheight-section bynationalitypage gamepage' activetab={activeTab}>\n      <div className='tab-select'>\n        <div className='tab-select-row'>\n          <div className='bg'></div>\n          <button className='main-section' onClick={() => setActiveTab('main-section')}>\n            Squad\n          </button>\n          <button className='guess-section' onClick={() => setActiveTab('guess-section')}>\n            Guess\n          </button>\n          <button className='misc-section' onClick={() => setActiveTab('misc-section')}>\n            Hints &amp; Stats\n          </button>\n        </div>\n      </div>\n      <div className='side-section guess-section'>\n        <div className={`panel side-panel guessteam ${gameData.doneGuessing ? 'doneguessing' : ''}`}>\n          <h1 className='title'>{gameData.doneGuessing ? 'Correct!' : 'Make a Guess:'}</h1>\n          <div className='teams'>\n            {gameData.teams.map((e, i) => {\n              const { name } = e;\n              const isWrong = gameData.wrongTeams.indexOf(name) > -1;\n              const isCorrect = name === gameData.correctTeam && gameData.doneGuessing;\n              return (\n                <PrimaryButton\n                  key={i}\n                  className={`button ${isWrong ? 'wrong' : ''} ${isCorrect || isWrong ? 'active' : ''} ${\n                    teamsEliminated.indexOf(i) > -1 ? 'disabled' : ''\n                  }`}\n                  color={isWrong ? 'var(--danger)' : 'var(--primary)'}\n                  style={{ '--bg-url': `url(${e.logoURL})` }}\n                  text={`${name} ${isWrong ? '' : ''}${isCorrect ? '' : ''}`}\n                  onClick={\n                    isWrong\n                      ? () => {}\n                      : () => {\n                          guessTeam(name);\n                        }\n                  }\n                />\n              );\n            })}\n          </div>\n          <div className='bottom-buttons'>\n            {gameData.doneGuessing && !props.dailyChallenge ? (\n              <TertiaryButton\n                className='newchallenge'\n                onClick={() => {\n                  newTeam();\n                }}\n                text={<>New Game &rarr;</>}\n              />\n            ) : null}\n            <TertiaryButton\n              className='light'\n              onClick={\n                gameData.doneGuessing\n                  ? () => {\n                      setGameData({ ...gameData, doneGuessing: false, wrongTeams: [] });\n                    }\n                  : () => {\n                      setGameData({ ...gameData, doneGuessing: true });\n                    }\n              }\n              text={gameData.doneGuessing ? <>&larr; Hide Answer</> : <>Show Answer&nbsp;&nbsp;ð</>}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='panel main main-section'>\n        <div className='pitch'>\n          {[...Array(21)].map((x, i) => (\n            <div key={i} style={{ top: `${(100 / 21) * i}%`, height: `${100 / 21}%` }} className={`line ${i % 2 === 0 ? 'even' : 'odd'}`}></div>\n          ))}\n          <div className='midline'></div>\n          <div className='center circle dot'></div>\n          <div className='center circle'></div>\n          <div className='box small gk top'></div>\n          <div className='box small gk bottom'></div>\n          <div className='box large gk top'></div>\n          <div className='box large gk bottom'></div>\n          <div className='circle dot gk top'></div>\n          <div className='circle dot gk bottom'></div>\n          <div className='overlay'></div>\n          <p className='site-title'>SquadGuessr</p>\n        </div>\n        <div\n          className={`top ${\n            gameData.doneGuessing || showRatings || showTransferBudget || nameLettersShown.length > 0 ? 'show-answer' : 'hide-answer'\n          }`}\n        >\n          <div className='header'>\n            <div className='box'>\n              <h1>Guess That Team!</h1>\n              <p>Each flag and its position represents a player in a team.</p>\n              {!props.dailyChallenge ? <p style={{ marginTop: '.35rem' }}>Team league: {props.league}</p> : null}\n            </div>\n          </div>\n          <div className='left'>\n            <div className='logo-container'>\n              {gameData.doneGuessing || nameLettersShown.length > 0 ? (\n                <div className='logo box'>\n                  {gameData.doneGuessing ? <img src={gameData.logoURL} alt='Team Logo' /> : null}\n                  <h1>\n                    {gameData.correctTeam.split('').map((l, i) => {\n                      const fillerLetter = l === ' ' ? <>&nbsp; </> : '_ ';\n                      const letter = l + ' ';\n                      const showLetter = !gameData.doneGuessing && nameLettersShown.indexOf(i) > -1;\n                      return (\n                        <span key={i} style={gameData.doneGuessing ? {} : { textTransform: 'uppercase' }}>\n                          {gameData.doneGuessing ? l : showLetter ? letter : fillerLetter}\n                        </span>\n                      );\n                    })}\n                  </h1>\n                </div>\n              ) : null}\n              <div className='row'>\n                <div className='stars'>\n                  {gameData.stars && (gameData.doneGuessing || showRatings)\n                    ? Array(Math.floor(gameData.stars))\n                        .fill(fullStar)\n                        .concat(Array((gameData.stars % 1) / 0.5).fill(halfStar))\n                        .concat(Array(5 - Math.ceil(gameData.stars)).fill(emptyStar))\n                        .map((e, i) => <span key={i}>{e}</span>)\n                    : null}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='right'>\n            <div className='info box'>\n              {gameData.fifaMiscData && (gameData.doneGuessing || showTransferBudget) ? (\n                <p className='budget'>\n                  Transfer Budget: <strong>${commaNumber(gameData.fifaMiscData.transferBudgetDollars)}</strong>\n                </p>\n              ) : null}\n              {gameData.fifaMiscData && (gameData.doneGuessing || showRatings) ? (\n                <p className='rating'>\n                  Rating:&nbsp;\n                  <strong>\n                    {Object.keys(gameData.fifaMiscData.ratings)\n                      .map((e) => {\n                        return `${gameData.fifaMiscData.ratings[e]} ${e.slice(0, 3).toUpperCase()}`;\n                      })\n                      .join(' â¢ ')}\n                  </strong>\n                </p>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        <div className='formation'>\n          {gameData.teamFormation.map((player, i) => {\n            const flagURL = player.nationality.flagURL.split('/2/').join('/6/');\n            const playerURL = player.photoURL.split('/5/').join('/6/');\n            const showAnswer = gameData.doneGuessing;\n            let { x, y } = player.positionCoords;\n            return (\n              <div className={`player ${showAnswer ? 'show-player' : 'show-flag'}`} key={i} style={{ left: `${x}%`, bottom: `${y}%` }}>\n                <img src={flagURL} alt='' className='flag' />\n                <img src={playerURL} alt='' className='player' />\n                <p className='name'>\n                  <span>{showAnswer ? player.shortName : player.nationality.name}</span>\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className='side-section extras-section misc-section'>\n        {props.dailyChallenge ? (\n          <div className='panel side-panel dailychallenge'>\n            <h1 className='title'>Daily Challenge</h1>\n            <div className='title-number'>\n              <h1>{['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][new Date().getMonth()]}</h1>\n              <p>{new Date().getDate()}</p>\n            </div>\n          </div>\n        ) : null}\n        {!props.dailyChallenge ? <PrimaryButton className='menu-btn' onClick={() => props.setPage('play')} text={<>&larr; Back to Menu</>} /> : null}\n        <div className='panel side-panel stats'>\n          <h1 className='title'>Your Stats</h1>\n          <PrimaryButton text='Sign In to Get Your Stats' />\n        </div>\n        <div className='panel side-panel hints'>\n          <h1 className='title'>Hints</h1>\n          <PrimaryButton\n            className={teamsEliminated.length > 0 ? 'disabled' : ''}\n            onClick={() => {\n              const newTeamsEliminated = [];\n              while (newTeamsEliminated.length < Math.floor(gameData.teams.length / 2)) {\n                const randIdx = Math.floor(Math.random() * gameData.teams.length);\n                if (newTeamsEliminated.indexOf(randIdx) === -1 && gameData.teams[randIdx].name !== gameData.correctTeam)\n                  newTeamsEliminated.push(randIdx);\n              }\n              setTeamsEliminated(newTeamsEliminated);\n            }}\n            color='#9b59b6'\n            text='Reduce Guess Pool by 50%'\n          />\n          <PrimaryButton\n            color='#9b59b6'\n            className={nameLettersShown.length > 0 ? 'disabled' : ''}\n            onClick={() => {\n              const newNameLettersShown = [];\n              while (newNameLettersShown.length < 2) {\n                const randIdx = Math.floor(Math.random() * gameData.correctTeam.length);\n                if (newNameLettersShown.indexOf(randIdx) > -1) continue;\n                if (gameData.correctTeam[randIdx] === ' ') continue;\n                newNameLettersShown.push(randIdx);\n              }\n              setNameLettersShown(newNameLettersShown);\n            }}\n            text='Show 2 Letters of Team Name'\n          />\n          <PrimaryButton\n            className={showRatings ? 'disabled' : ''}\n            onClick={() => {\n              setShowRatings(true);\n            }}\n            color='#9b59b6'\n            text='Show Team Ratings'\n          />\n          <PrimaryButton\n            className={showTransferBudget ? 'disabled' : ''}\n            onClick={() => {\n              setShowTransferBudget(true);\n            }}\n            color='#9b59b6'\n            text='Show Transfer Budget'\n          />\n        </div>\n        {/* <div className='panel side-panel share'>\n          <h1 className='title'>Share</h1>\n          <PrimaryButton color='var(--info)' text='Download Challenge' />\n          <PrimaryButton color='var(--info)' text='Download Challenge Answer' />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/components/PlayButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js",["83"],"/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":56,"column":6,"nodeType":"95","endLine":56,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":105,"column":6,"nodeType":"95","endLine":105,"endColumn":8,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":22,"column":6,"nodeType":"95","endLine":22,"endColumn":8,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'toBase64' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLeagueFromURLParam'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'newTeam'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'leagueNameCode'. Either include it or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [updateLeagueFromURLParam]",{"range":"112","text":"113"},"Update the dependencies array to be: [newTeam]",{"range":"114","text":"115"},"Update the dependencies array to be: [leagueNameCode]",{"range":"116","text":"117"},[2127,2129],"[updateLeagueFromURLParam]",[3853,3855],"[newTeam]",[846,848],"[leagueNameCode]"]