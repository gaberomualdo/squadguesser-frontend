[{"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js":"1","/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js":"2","/Users/fred/Desktop/code/squadguessr/src/App.js":"3","/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js":"4","/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js":"5","/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js":"6","/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js":"7","/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js":"8","/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js":"9","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js":"10","/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js":"11","/Users/fred/Desktop/code/squadguessr/src/components/PitchTop/index.js":"12","/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js":"13","/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/dropdown.js":"14","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/game.js":"15","/Users/fred/Desktop/code/squadguessr/src/index.js":"16","/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js":"17","/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js":"18","/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js":"19","/Users/fred/Desktop/code/squadguessr/src/components/Modal/index.js":"20","/Users/fred/Desktop/code/squadguessr/src/components/ProfileModal/index.js":"21","/Users/fred/Desktop/code/squadguessr/src/lib/stats.js":"22","/Users/fred/Desktop/code/squadguessr/src/pages/Leaderboard/index.js":"23","/Users/fred/Desktop/code/squadguessr/src/lib/starIcons.js":"24","/Users/fred/Desktop/code/squadguessr/src/lib/utils.js":"25","/Users/fred/Desktop/code/squadguessr/src/components/Formation/index.js":"26","/Users/fred/Desktop/code/squadguessr/src/pages/Home/animatedNumber.js":"27","/Users/fred/Desktop/code/squadguessr/src/lib/config.js":"28","/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js":"29"},{"size":6751,"mtime":1618722419004,"results":"30","hashOfConfig":"31"},{"size":6021,"mtime":1611560199812,"results":"32","hashOfConfig":"31"},{"size":6604,"mtime":1618718938467,"results":"33","hashOfConfig":"31"},{"size":362,"mtime":1606439571342,"results":"34","hashOfConfig":"31"},{"size":293,"mtime":1607894660401,"results":"35","hashOfConfig":"31"},{"size":271,"mtime":1608780338803,"results":"36","hashOfConfig":"31"},{"size":162,"mtime":1609563378695,"results":"37","hashOfConfig":"31"},{"size":850,"mtime":1608926195849,"results":"38","hashOfConfig":"31"},{"size":282,"mtime":1607885588163,"results":"39","hashOfConfig":"31"},{"size":3361,"mtime":1609701218928,"results":"40","hashOfConfig":"31"},{"size":6583,"mtime":1609643437494,"results":"41","hashOfConfig":"31"},{"size":2213,"mtime":1611683757430,"results":"42","hashOfConfig":"31"},{"size":18942,"mtime":1618717959305,"results":"43","hashOfConfig":"31"},{"size":1524,"mtime":1611386486094,"results":"44","hashOfConfig":"31"},{"size":14870,"mtime":1618721933525,"results":"45","hashOfConfig":"31"},{"size":492,"mtime":1608355112027,"results":"46","hashOfConfig":"31"},{"size":351,"mtime":1608780335054,"results":"47","hashOfConfig":"31"},{"size":517,"mtime":1608780329526,"results":"48","hashOfConfig":"31"},{"size":1213,"mtime":1609701212956,"results":"49","hashOfConfig":"31"},{"size":1192,"mtime":1618696851256,"results":"50","hashOfConfig":"31"},{"size":7547,"mtime":1611559376526,"results":"51","hashOfConfig":"31"},{"size":1799,"mtime":1611386849144,"results":"52","hashOfConfig":"31"},{"size":3840,"mtime":1611584500317,"results":"53","hashOfConfig":"31"},{"size":1000,"mtime":1608865057537,"results":"54","hashOfConfig":"31"},{"size":869,"mtime":1611601547295,"results":"55","hashOfConfig":"31"},{"size":1929,"mtime":1618596346870,"results":"56","hashOfConfig":"31"},{"size":1754,"mtime":1618696065062,"results":"57","hashOfConfig":"31"},{"size":85,"mtime":1608411683447,"results":"58","hashOfConfig":"31"},{"size":1822,"mtime":1618720166184,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vykj9n",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js",[],["126","127"],"/Users/fred/Desktop/code/squadguessr/src/App.js",[],"/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js",["128"],"/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from 'react';\nimport { APIBaseURL } from '../../lib/config';\nimport Game from './game';\nimport { PlayButton } from '../../components/';\nimport './index-styles.css';\nimport { fromBase64, toBase64 } from '../../lib/utils';\n\nconst urlLeagueParam = 'league';\n\nconst leagueDescriptions = {\n  'All Teams': <>Up for a challenge? Guess from 200+ teams &rarr;</>,\n  'Top 25 Teams': <>Guess from the greatest teams right now &rarr;</>,\n  'Premier League': <>England's first division, the biggest league &rarr;</>,\n  'La Liga': <>Spanish league home to Barcelona and Real Madrid &rarr;</>,\n  Bundesliga: <>Germany's league, with Bayern Munchen and more &rarr;</>,\n  'Serie A TIM': <>Italian league with famous players like Ronaldo &rarr;</>,\n  'Ligue 1': <>French league with Neymar, Mbappe, and more &rarr;</>,\n  Eredivisie: <>Dutch league home to Ajax, PSV, and more &rarr;</>,\n  'Liga NOS': <>Portugal's league with Benfica and Porto &rarr;</>,\n  'SÃ¼per Lig': <>Turkish league with Galatasaray and more &rarr;</>,\n  Libertadores: <>South American league &rarr;</>,\n  'Scottish Prem': <>Scottish league &rarr;</>,\n  'EFL Championship': <>England's second division &rarr;</>,\n};\n\nexport default function ByNationalityPage(props) {\n  const [league, setLeague] = useState('');\n  const [leagues, setLeagues] = useState([]);\n\n  const updateLeagueFromURLParam = (leaguesArr) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has(urlLeagueParam)) {\n      const param = urlParams.get(urlLeagueParam);\n      try {\n        const decodedParam = fromBase64(param);\n        if (leaguesArr.indexOf(decodedParam) > -1 && league !== decodedParam) {\n          setLeague(decodedParam);\n        }\n      } catch (err) {}\n    } else if (league !== '') {\n      setLeague('');\n    }\n  };\n\n  if (leagues) {\n    updateLeagueFromURLParam(leagues);\n  }\n\n  useEffect(() => {\n    (async () => {\n      const data = await (await fetch(`${APIBaseURL}/leagues`)).json();\n      updateLeagueFromURLParam(data);\n      setLeagues(data);\n    })();\n  }, []);\n\n  const setLeagueAndParam = (leagueName) => {\n    const leagueNameCode = toBase64(leagueName);\n    const url = new URL(window.location.href);\n    url.searchParams.delete('game');\n    url.searchParams.set(urlLeagueParam, leagueNameCode);\n    const urlStr = url.toString();\n    window.open(urlStr, '_self');\n  };\n\n  return leagues.length > 0 ? (\n    league ? (\n      <Game\n        setAuthModal={props.setAuthModal}\n        setProfileModal={props.setProfileModal}\n        league={league}\n        setPage={props.setPage}\n        reloadUser={props.reloadUser}\n        user={props.user}\n        loggedIn={props.loggedIn}\n      />\n    ) : (\n      <div className='bynationalitypage-selectleague fullheight-section'>\n        <div className='inner'>\n          <h1 className='title'>Choose a League:</h1>\n          {leagues.map((e, i) => {\n            return (\n              <PlayButton\n                onClick={() => setLeagueAndParam(e)}\n                key={i}\n                name={e}\n                description={leagueDescriptions[e] ? leagueDescriptions[e] : <>play this league &rarr;</>}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n  ) : (\n    <div className='fullheight-section'></div>\n  );\n}\n",["129","130"],"/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PitchTop/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js",["131"],"/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/dropdown.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/game.js",["132"],"/Users/fred/Desktop/code/squadguessr/src/index.js",["133"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["134","135"],"/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js",["136"],"/* eslint-disable no-restricted-globals */\nimport React, { useEffect, useState } from 'react';\nimport { APIBaseURL } from '../../lib/config';\nimport Game from '../ByNationality/game';\nimport { toBase64 } from '../../lib/utils';\n\nconst leagueName = 'Daily Challenge';\n\nexport default function DailyChallenge(props) {\n  const [loaded, setLoaded] = useState(false);\n  const leagueNameCode = toBase64(leagueName);\n  useEffect(() => {\n    (async () => {\n      const correctTeam = await (await fetch(`${APIBaseURL}/dailychallenge/team`)).json();\n      const url = new URL(window.location.href);\n      url.searchParams.set('game', toBase64(correctTeam.name));\n      url.searchParams.set('league', leagueNameCode);\n      const urlStr = url.toString();\n      history.replaceState({}, 'Navigate to New Page', urlStr);\n      setLoaded(true);\n    })();\n  }, []);\n\n  return loaded ? (\n    <Game\n      setPage={props.setPage}\n      league={leagueName}\n      dailyChallenge={true}\n      reloadUser={props.reloadUser}\n      user={props.user}\n      loggedIn={props.loggedIn}\n      setAuthModal={props.setAuthModal}\n      setProfileModal={props.setProfileModal}\n    />\n  ) : (\n    <div className='fullheight-section'></div>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/components/Modal/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ProfileModal/index.js",["137","138","139"],"import React, { useState, useEffect } from 'react';\nimport { Modal, Loading, PrimaryButton } from '../../components';\nimport './styles.css';\nimport { processDate } from '../../lib/utils';\nimport { AreaChart, LineChart, Line, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { APIBaseURL } from '../../lib/config';\nimport getStats from '../../lib/stats';\nimport axios from 'axios';\nimport commaNumber from 'comma-number';\n\nconst formatNumber = (e) => (e === 0 ? 'None' : commaNumber(e));\nexport default function ProfileModal(props) {\n  const { profile, setProfileModal, profileIsSignedIn } = props;\n  const [leagues, setLeagues] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const data = await (await fetch(`${APIBaseURL}/leagues`)).json();\n      setLeagues(data);\n    })();\n  }, []);\n  let ratingHistory = profile.ratingHistory;\n  if (ratingHistory) {\n    if (ratingHistory.length === 0) {\n      ratingHistory = [\n        { rating: 1000, date: new Date() },\n        { rating: 1000, date: new Date() },\n      ];\n    } else if (ratingHistory.length === 1) {\n      ratingHistory.push({ rating: ratingHistory[0].rating, date: new Date() });\n    }\n  }\n  return (\n    <Modal className='profile-modal-component' closeModal={() => setProfileModal(false)}>\n      {Object.keys(profile).length === 0 ? (\n        <div style={{ textAlign: 'center' }}>\n          <Loading style={{ display: 'block', margin: '0 auto 1.5rem auto' }} />\n          <p style={{ fontWeight: 600, opacity: 0.75, fontSize: '95%' }}>Loading Profile...</p>\n        </div>\n      ) : (\n        <>\n          <div className='meta'>\n            <h1 className='username'>\n              @{profile.user.username}\n              {profileIsSignedIn ? <span> (you)</span> : <></>}\n            </h1>\n            <ul className='descriptions'>\n              {/* <li>Rated {profile.rating}</li> */}\n              <li>Played {commaNumber(profile.gamesPlayed.length)} Games</li>\n              <li>Joined {processDate(new Date(profile.user.date))}</li>\n              <li>Ranked #{commaNumber(profile.leaderboardPosition)} on the Leaderboard</li>\n            </ul>\n          </div>\n          <div className='rating-over-time title-section'>\n            <h1 className='title'>Rating: {profile.rating}</h1>\n            {/* <p>@{profile.user.username}'s Rating Over Time</p> */}\n            <ResponsiveContainer width='93%' height={250}>\n              <AreaChart\n                className='chart'\n                data={ratingHistory.map((e) => {\n                  return { Rating: e.rating, date: processDate(new Date(e.date), true) };\n                })}\n              >\n                <CartesianGrid strokeDasharray='3 3' />\n                <XAxis dataKey='date' interval='preserveStartEnd' />\n                <YAxis domain={['dataMin - 50', 'dataMax']} interval='preserveStartEnd' />\n                <Tooltip separator=': ' wrapperClassName='charts-tooltip-wrapper' contentClassName='charts-tooltip-content' />\n                {/* <Legend /> */}\n                <Area type='monotone' dataKey='Rating' stroke='var(--primary)' fill='var(--primary)' />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className='title-section'>\n            <h1 className='title'>Recent Games</h1>\n            <table className='leaderboard styled-table'>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>League</th>\n                  <th>Answer</th>\n                  <th>Hints Used</th>\n                  <th>Wrong Guesses</th>\n                  <th>Result</th>\n                </tr>\n              </thead>\n              <tbody>\n                {profile.gamesPlayed.slice(0, 10).map((game, i) => (\n                  <tr className='row' key={i}>\n                    <td>{i + 1}</td>\n                    <td>{game.league}</td>\n                    <td>{game.correctAnswer}</td>\n                    <td>{formatNumber(game.hintsUsed)}</td>\n                    <td>{formatNumber(game.wrongGuesses)}</td>\n                    <td className={game.won ? 'won' : 'lost'}>{game.won ? 'Won' : 'Lost'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className='title-section'>\n            <h1 className='title'>Stats</h1>\n            <table className='leaderboard styled-table'>\n              <thead>\n                <tr>\n                  <th>League</th>\n                  <th>Win/Loss</th>\n                  <th>Current Streak</th>\n                  <th>Best Streak</th>\n                </tr>\n              </thead>\n              <tbody>\n                {leagues.map((league, i) => (\n                  <tr className='row' key={i}>\n                    {[\n                      league,\n                      (() => {\n                        const wl = getStats(profile.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : league, 'win-loss');\n                        return (\n                          <>\n                            {commaNumber(wl[0])} / {commaNumber(wl[1])}\n                          </>\n                        );\n                      })(),\n                      <>{commaNumber(getStats(profile.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : league, 'streak'))} Games</>,\n                      <>{commaNumber(getStats(profile.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : league, 'longest-streak'))} Games</>,\n                    ].map((e, i) => (\n                      <td key={i}>{e}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          {profileIsSignedIn ? (\n            <div className='title-section settings'>\n              <h1 className='title'>Settings</h1>\n              {/*const token = localStorage.getItem('authtoken');*/}\n              <PrimaryButton\n                className='secondary delete-btn'\n                color='var(--danger)'\n                text='Delete Your Account'\n                onClick={() => {\n                  setTimeout(() => {\n                    let enteredUsername = '';\n                    while (`@${profile.user.username}` !== enteredUsername) {\n                      enteredUsername = prompt(`Want to delete your account? Type your username (@${profile.user.username}) to confirm.`);\n                      if (enteredUsername === null) {\n                        return;\n                      }\n                    }\n                    // delete the account\n                    const token = localStorage.getItem('authtoken');\n\n                    axios({\n                      method: 'delete',\n                      baseURL: APIBaseURL,\n                      url: `/api/users/me/`,\n                      headers: {\n                        'x-auth-token': token,\n                      },\n                    })\n                      .catch((err) => {\n                        try {\n                          alert(err.response.data.errors[0].msg);\n                        } catch (err) {\n                          alert('Error: Internal or Server Error Occurred');\n                        }\n                      })\n                      .then(() => {\n                        alert('Your Account Has Been Deleted.');\n                        window.location.reload();\n                      });\n                  }, 100);\n                }}\n              />\n            </div>\n          ) : null}\n        </>\n      )}\n    </Modal>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/lib/stats.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Leaderboard/index.js",[],["140","141"],"/Users/fred/Desktop/code/squadguessr/src/lib/starIcons.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/utils.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Formation/index.js",["142"],"/Users/fred/Desktop/code/squadguessr/src/pages/Home/animatedNumber.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/config.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js",["143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":56,"column":6,"nodeType":"150","endLine":56,"endColumn":8,"suggestions":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"146","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"158","line":131,"column":6,"nodeType":"150","endLine":131,"endColumn":8,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"160","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":23},{"ruleId":"144","replacedBy":"161"},{"ruleId":"146","replacedBy":"162"},{"ruleId":"148","severity":1,"message":"163","line":22,"column":6,"nodeType":"150","endLine":22,"endColumn":8,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"165","line":5,"column":21,"nodeType":"156","messageId":"157","endLine":5,"endColumn":30},{"ruleId":"154","severity":1,"message":"166","line":5,"column":32,"nodeType":"156","messageId":"157","endLine":5,"endColumn":36},{"ruleId":"154","severity":1,"message":"167","line":5,"column":82,"nodeType":"156","messageId":"157","endLine":5,"endColumn":88},{"ruleId":"144","replacedBy":"168"},{"ruleId":"146","replacedBy":"169"},{"ruleId":"154","severity":1,"message":"170","line":5,"column":11,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":34,"column":69,"nodeType":"173","endLine":34,"endColumn":84},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLeagueFromURLParam'. Either include it or remove the dependency array.","ArrayExpression",["176"],["174"],["175"],"no-unused-vars","'seedrandom' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'newTeam'. Either include it or remove the dependency array.",["177"],"'reportWebVitals' is defined but never used.",["174"],["175"],"React Hook useEffect has a missing dependency: 'leagueNameCode'. Either include it or remove the dependency array.",["178"],"'LineChart' is defined but never used.","'Line' is defined but never used.","'Legend' is defined but never used.",["174"],["175"],"'showAnswer' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [updateLeagueFromURLParam]",{"range":"185","text":"186"},"Update the dependencies array to be: [newTeam]",{"range":"187","text":"188"},"Update the dependencies array to be: [leagueNameCode]",{"range":"189","text":"190"},[2127,2129],"[updateLeagueFromURLParam]",[4232,4234],"[newTeam]",[846,848],"[leagueNameCode]"]