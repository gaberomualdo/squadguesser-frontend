[{"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js":"1","/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js":"2","/Users/fred/Desktop/code/squadguessr/src/App.js":"3","/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js":"4","/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js":"5","/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js":"6","/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js":"7","/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js":"8","/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js":"9","/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js":"10","/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js":"11"},{"size":6007,"mtime":1609208092474,"results":"12","hashOfConfig":"13"},{"size":5837,"mtime":1609174020507,"results":"14","hashOfConfig":"13"},{"size":4528,"mtime":1609204609530,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1606439571342,"results":"16","hashOfConfig":"13"},{"size":293,"mtime":1607894660401,"results":"17","hashOfConfig":"13"},{"size":271,"mtime":1608780338803,"results":"18","hashOfConfig":"13"},{"size":208,"mtime":1608863360817,"results":"19","hashOfConfig":"13"},{"size":850,"mtime":1608926195849,"results":"20","hashOfConfig":"13"},{"size":282,"mtime":1607885588163,"results":"21","hashOfConfig":"13"},{"size":3151,"mtime":1608525620678,"results":"22","hashOfConfig":"13"},{"size":3558,"mtime":1609220561073,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vykj9n",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/App.js",[],"/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/ByNationality/index.js",["47"],"/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js",["48"],"import './styles.css';\nimport { TertiaryButton } from '../../components';\nimport React, { useState } from 'react';\n\nexport default function AuthModal(props) {\n  const [showSignIn, setShowSignIn] = useState(props.signIn);\n  const [slide, setSlide] = useState(0);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const usernameLabel = `${showSignIn ? '' : 'Choose a '}Username:`;\n  const passwordLabel = `${showSignIn ? '' : 'Choose a '}Password:`;\n\n  const nextBtnDisabled = !(slide === 0 ? username.length > 0 : password.length > 0);\n\n  return (\n    <>\n      <style>{`body{overflow:hidden;}`}</style>\n      <div className='auth-modal-component'>\n        <div className='inner'>\n          <button className='close' aria-label='Close Authentication Modal' onClick={() => props.setAuthModal(false)}>\n            <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n              <path d='M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z' />\n            </svg>\n          </button>\n          <h1>{showSignIn ? 'Sign In' : 'Sign Up'}</h1>\n          <p>\n            Or{' '}\n            <button\n              onClick={() => {\n                setShowSignIn(!showSignIn);\n                setSlide(0);\n              }}\n            >\n              {showSignIn ? 'Sign Up' : 'Sign In'}\n            </button>\n          </p>\n          <form className='form' slide={slide}>\n            <div className='input-container username'>\n              <input\n                type='text'\n                placeholder={usernameLabel}\n                name='username'\n                spellCheck={false}\n                pattern='^[a-zA-Z0-9_.-]*$'\n                {...(showSignIn ? { autoComplete: 'username' } : {})}\n                onChange={(evt) => setUsername(evt.target.value)}\n              />\n              <label htmlFor='username'>{usernameLabel}</label>\n            </div>\n            <div className='input-container password'>\n              <input\n                type='password'\n                onChange={(evt) => setPassword(evt.target.value)}\n                placeholder={passwordLabel}\n                name='password'\n                autoComplete={showSignIn ? 'current-password' : 'new-password'}\n              />\n              <label htmlFor='password'>{passwordLabel}</label>\n            </div>\n            {error.length > 0 ? <p className='error'>{error}</p> : null}\n            <div className='slides-btn-container'>\n              {slide > 0 ? (\n                <TertiaryButton className='back-btn light' type='button' onClick={() => setSlide(slide - 1)} text={<>&larr;&nbsp; Back</>} />\n              ) : null}\n              <TertiaryButton\n                className='next-btn'\n                type={slide === 0 ? 'button' : 'submit'}\n                onClick={\n                  nextBtnDisabled\n                    ? () => {}\n                    : () => {\n                        if (slide === 0) {\n                          setSlide(slide + 1);\n                        } else {\n                          // sign in / create an account\n                        }\n                      }\n                }\n                disabled={nextBtnDisabled}\n                text={<>{slide === 0 ? 'Next' : showSignIn ? 'Sign In' : 'Create Account'} &nbsp;&rarr;</>}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"49","severity":1,"message":"50","line":56,"column":6,"nodeType":"51","endLine":56,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":10,"column":17,"nodeType":"55","messageId":"56","endLine":10,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLeagueFromURLParam'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar",{"desc":"58","fix":"59"},"Update the dependencies array to be: [updateLeagueFromURLParam]",{"range":"60","text":"61"},[2127,2129],"[updateLeagueFromURLParam]"]