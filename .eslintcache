[{"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js":"1","/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js":"2","/Users/fred/Desktop/code/squadguessr/src/App.js":"3","/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js":"4","/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js":"5","/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js":"6","/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js":"7","/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js":"8","/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js":"9","/Users/fred/Desktop/code/squadguessr/src/components/PitchTop/index.js":"10","/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js":"11","/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/dropdown.js":"12","/Users/fred/Desktop/code/squadguessr/src/index.js":"13","/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js":"14","/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js":"15","/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js":"16","/Users/fred/Desktop/code/squadguessr/src/components/Modal/index.js":"17","/Users/fred/Desktop/code/squadguessr/src/components/ProfileModal/index.js":"18","/Users/fred/Desktop/code/squadguessr/src/lib/stats.js":"19","/Users/fred/Desktop/code/squadguessr/src/pages/Leaderboard/index.js":"20","/Users/fred/Desktop/code/squadguessr/src/lib/starIcons.js":"21","/Users/fred/Desktop/code/squadguessr/src/lib/utils.js":"22","/Users/fred/Desktop/code/squadguessr/src/components/Formation/index.js":"23","/Users/fred/Desktop/code/squadguessr/src/pages/Home/animatedNumber.js":"24","/Users/fred/Desktop/code/squadguessr/src/lib/config.js":"25","/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js":"26","/Users/fred/Desktop/code/squadguessr/src/pages/Play/game.js":"27","/Users/fred/Desktop/code/squadguessr/src/pages/Play/index.js":"28","/Users/fred/Desktop/code/squadguessr/src/components/LeagueButton/index.js":"29","/Users/fred/Desktop/code/squadguessr/src/lib/leagueInfo.js":"30","/Users/fred/Desktop/code/squadguessr/src/components/TeamSheetTable/index.js":"31","/Users/fred/Desktop/code/squadguessr/src/components/TeamInformationTable/index.js":"32","/Users/fred/Desktop/code/squadguessr/src/components/PlayModal/index.js":"33","/Users/fred/Desktop/code/squadguessr/src/components/PlayButton/index.js":"34","/Users/fred/Desktop/code/squadguessr/src/components/ScrollToTop/index.js":"35","/Users/fred/Desktop/code/squadguessr/src/components/FullHeightLoading/index.js":"36","/Users/fred/Desktop/code/squadguessr/src/lib/gameCode.js":"37","/Users/fred/Desktop/code/squadguessr/src/lib/gameTypes.js":"38","/Users/fred/Desktop/code/squadguessr/src/components/ShareBox/index.js":"39","/Users/fred/Desktop/code/squadguessr/src/components/NotAvailableOnMobileBanner/index.js":"40","/Users/fred/Desktop/code/squadguessr/src/components/index.js":"41","/Users/fred/Desktop/code/squadguessr/src/components/LargeCalendar/index.js":"42","/Users/fred/Desktop/code/squadguessr/src/components/PageHeader/index.js":"43","/Users/fred/Desktop/code/squadguessr/src/lib/getNumberEnding.js":"44","/Users/fred/Desktop/code/squadguessr/src/components/LinedHeader/index.js":"45","/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/DailyChallengeGame.js":"46","/Users/fred/Desktop/code/squadguessr/src/components/ShareButton/index.js":"47","/Users/fred/Desktop/code/squadguessr/src/pages/FAQ/index.js":"48","/Users/fred/Desktop/code/squadguessr/src/pages/Instructions/index.js":"49","/Users/fred/Desktop/code/squadguessr/src/lib/getNewGamePath.js":"50","/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js":"51","/Users/fred/Desktop/code/squadguessr/src/components/CookiesBanner/index.js":"52"},{"size":8872,"mtime":1619408561794,"results":"53","hashOfConfig":"54"},{"size":11194,"mtime":1619396530405,"results":"55","hashOfConfig":"54"},{"size":6666,"mtime":1619417633819,"results":"56","hashOfConfig":"54"},{"size":362,"mtime":1606439571342,"results":"57","hashOfConfig":"54"},{"size":293,"mtime":1607894660401,"results":"58","hashOfConfig":"54"},{"size":444,"mtime":1619300642461,"results":"59","hashOfConfig":"54"},{"size":162,"mtime":1609563378695,"results":"60","hashOfConfig":"54"},{"size":985,"mtime":1619374080057,"results":"61","hashOfConfig":"54"},{"size":6350,"mtime":1619387115022,"results":"62","hashOfConfig":"54"},{"size":2207,"mtime":1618891593321,"results":"63","hashOfConfig":"54"},{"size":21542,"mtime":1619420620916,"results":"64","hashOfConfig":"54"},{"size":1588,"mtime":1618854522207,"results":"65","hashOfConfig":"54"},{"size":573,"mtime":1619300237247,"results":"66","hashOfConfig":"54"},{"size":644,"mtime":1619300724340,"results":"67","hashOfConfig":"54"},{"size":804,"mtime":1619417477807,"results":"68","hashOfConfig":"54"},{"size":7460,"mtime":1619410297026,"results":"69","hashOfConfig":"54"},{"size":1177,"mtime":1619388354050,"results":"70","hashOfConfig":"54"},{"size":10239,"mtime":1619390137151,"results":"71","hashOfConfig":"54"},{"size":1799,"mtime":1611386849144,"results":"72","hashOfConfig":"54"},{"size":3165,"mtime":1619379161096,"results":"73","hashOfConfig":"54"},{"size":1000,"mtime":1608865057537,"results":"74","hashOfConfig":"54"},{"size":869,"mtime":1611601547295,"results":"75","hashOfConfig":"54"},{"size":2286,"mtime":1618892125162,"results":"76","hashOfConfig":"54"},{"size":1754,"mtime":1618696065062,"results":"77","hashOfConfig":"54"},{"size":168,"mtime":1619378206412,"results":"78","hashOfConfig":"54"},{"size":1852,"mtime":1619374120555,"results":"79","hashOfConfig":"54"},{"size":17749,"mtime":1619389817914,"results":"80","hashOfConfig":"54"},{"size":6447,"mtime":1619379786788,"results":"81","hashOfConfig":"54"},{"size":1721,"mtime":1619325138944,"results":"82","hashOfConfig":"54"},{"size":1448,"mtime":1618808602966,"results":"83","hashOfConfig":"54"},{"size":1328,"mtime":1618867960429,"results":"84","hashOfConfig":"54"},{"size":874,"mtime":1618868776148,"results":"85","hashOfConfig":"54"},{"size":2409,"mtime":1619379324270,"results":"86","hashOfConfig":"54"},{"size":736,"mtime":1619362201495,"results":"87","hashOfConfig":"54"},{"size":333,"mtime":1619303433178,"results":"88","hashOfConfig":"54"},{"size":298,"mtime":1619310572448,"results":"89","hashOfConfig":"54"},{"size":6251,"mtime":1619375474597,"results":"90","hashOfConfig":"54"},{"size":175,"mtime":1619323258018,"results":"91","hashOfConfig":"54"},{"size":3109,"mtime":1619409886667,"results":"92","hashOfConfig":"54"},{"size":341,"mtime":1619356058131,"results":"93","hashOfConfig":"54"},{"size":1318,"mtime":1619356512092,"results":"94","hashOfConfig":"54"},{"size":459,"mtime":1619408726053,"results":"95","hashOfConfig":"54"},{"size":272,"mtime":1619376964120,"results":"96","hashOfConfig":"54"},{"size":270,"mtime":1619362616402,"results":"97","hashOfConfig":"54"},{"size":330,"mtime":1619364093769,"results":"98","hashOfConfig":"54"},{"size":1467,"mtime":1619410130360,"results":"99","hashOfConfig":"54"},{"size":959,"mtime":1619390806681,"results":"100","hashOfConfig":"54"},{"size":446,"mtime":1619412277281,"results":"101","hashOfConfig":"54"},{"size":408,"mtime":1619412299383,"results":"102","hashOfConfig":"54"},{"size":740,"mtime":1619355415748,"results":"103","hashOfConfig":"54"},{"size":2373,"mtime":1619412260551,"results":"104","hashOfConfig":"54"},{"size":1459,"mtime":1619419430286,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"1vykj9n",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"109"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"109"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fred/Desktop/code/squadguessr/src/components/NavBar/index.js",["219","220","221"],"import './styles.css';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\nimport { Loading, ResponsiveContainer, PrimaryButton, SecondaryButton } from '../';\nimport { siteTitle } from '../../lib/config';\n\nconst remToPx = (rem) => rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\nconst navWidthRem = 17.5;\nconst navWidthPx = remToPx(navWidthRem);\nconst outsideSidebar = (e) => {\n  return e.clientX < window.innerWidth - navWidthPx;\n};\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrolling: false,\n      mobile: false,\n      menuOpen: false,\n      menuBtnBeenClicked: false,\n      menuDragging: false,\n      menuDragStart: -1,\n      menuStartPosition: 0,\n      menuPosition: 0,\n    };\n\n    this.updateScrolling = this.updateScrolling.bind(this);\n    this.mouseClick = this.mouseClick.bind(this);\n    this.checkMobile = this.checkMobile.bind(this);\n\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n  }\n  mouseDown(e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    if (outsideSidebar(e)) {\n      this.setState({ menuDragging: true, menuDragStart: e.clientX, menuStartPosition: this.state.menuPosition });\n    }\n  }\n  mouseMove(e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    if (this.state.menuDragging) {\n      this.setState({ menuPosition: this.state.menuStartPosition + e.clientX - this.state.menuDragStart });\n    }\n  }\n  mouseUp(e) {\n    this.setState({ menuDragging: false });\n    if (this.state.menuPosition > navWidthPx * 0.25) {\n      this.setState({ menuPosition: 0, menuOpen: false });\n    } else {\n      this.setState({ menuPosition: 0 });\n    }\n    // write code to snap menu position here\n  }\n  mouseClick(e) {\n    if (outsideSidebar(e)) {\n      this.setState({ menuOpen: false });\n    }\n  }\n  updateScrolling() {\n    const newState = window.pageYOffset > 0;\n    if (this.state.scrolling !== newState) {\n      this.setState({ scrolling: newState });\n    }\n  }\n  checkMobile() {\n    const newState = window.innerWidth < 1150;\n    if (this.state.mobile !== newState) {\n      this.setState({ mobile: newState });\n    }\n  }\n  componentDidMount() {\n    this.updateScrolling();\n    this.checkMobile();\n\n    window.addEventListener('scroll', this.updateScrolling);\n    window.addEventListener('resize', this.checkMobile);\n    document.addEventListener('click', this.mouseClick);\n\n    document.addEventListener('mousedown', this.mouseDown);\n    document.addEventListener('mousemove', this.mouseMove);\n    document.addEventListener('mouseup', this.mouseUp);\n\n    document.addEventListener('touchstart', this.mouseDown);\n    document.addEventListener('touchmove', this.mouseMove);\n    document.addEventListener('touchend', this.mouseUp);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.updateScrolling);\n    window.removeEventListener('resize', this.checkMobile);\n    document.removeEventListener('click', this.mouseClick);\n    document.removeEventListener('click', this.mouseClick);\n  }\n  render() {\n    const { pages, user } = this.props;\n    const homePage = pages.filter((e) => e.isHomepage)[0];\n    const mainButtonColor = 'var(--primary)';\n\n    const closeMenu = () => this.setState({ menuOpen: false });\n\n    const logoButton = (\n      <NavLink onClick={() => closeMenu()} to='/' exact={homePage.useExactURLMatching} activeClassName='active'>\n        <PrimaryButton isNotButton icon={homePage.icon} text={siteTitle} color={mainButtonColor} className='logo'></PrimaryButton>\n      </NavLink>\n    );\n    const infoButtons = pages\n      .filter((e) => e.type && e.type === 'info')\n      .map((e, i) => (\n        <NavLink onClick={() => closeMenu()} key={e.name} exact={e.useExactURLMatching} to={`/${e.code}`} activeClassName='active'>\n          <SecondaryButton isNotButton icon={e.icon} text={e.name} className='light with-margin infobutton' color={mainButtonColor}></SecondaryButton>\n        </NavLink>\n      ));\n    const mainButtons = pages\n      .filter((e) => !e.isHomepage && !(e.type && e.type === 'info'))\n      .map((e, i) => (\n        <NavLink onClick={() => closeMenu()} key={e.name} exact={e.useExactURLMatching} to={`/${e.code}`} activeClassName='active'>\n          <PrimaryButton\n            isNotButton\n            icon={e.icon}\n            text={e.name}\n            className={`${this.state.mobile ? 'fixed-icon-width' : ''}`}\n            color={mainButtonColor}\n          ></PrimaryButton>\n        </NavLink>\n      ));\n    const authArea = (\n      <div className='auth-area'>\n        <div className='auth-buttons'>\n          {Object.keys(user).length === 0 ? (\n            <>\n              <button className='signin' onClick={() => this.props.setAuthModal(true, true)}>\n                Sign In\n              </button>\n              <span className='separator'>/</span>\n              <button className='signup' onClick={() => this.props.setAuthModal(true, false)}>\n                Sign Up\n              </button>\n            </>\n          ) : (\n            <>\n              <button className='user-info' style={user.currentlyLoading ? { opacity: 1 } : {}} onClick={() => this.props.setProfileModal(true)}>\n                {user.currentlyLoading ? (\n                  <Loading\n                    style={{\n                      '--border-color': 'var(--primary)',\n                      height: '1.15rem',\n                      width: '1.15rem',\n                      borderWidth: '.15rem',\n                      display: 'block',\n                      float: 'left',\n                    }}\n                  />\n                ) : (\n                  <>\n                    <span className='username'>You ({user.rating ? user.rating : '0'})</span>\n                  </>\n                )}\n              </button>\n              <span className='separator'>/</span>\n              <button\n                className='signout'\n                onClick={() => {\n                  localStorage.removeItem('authtoken');\n                  window.location.reload();\n                }}\n              >\n                Sign Out\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <>\n        <div className={`navbar-container ${this.state.scrolling ? 'scrolling' : ''} ${this.state.mobile ? 'mobile' : ''}`}>\n          <ResponsiveContainer>\n            {this.state.mobile ? (\n              <>\n                <div className='navbar'>\n                  {logoButton}\n                  <button className='menu-button' onClick={() => this.setState({ menuOpen: !this.state.menuOpen, menuBtnBeenClicked: true })}>\n                    {this.state.menuOpen ? (\n                      <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n                        <path d='M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z' />\n                      </svg>\n                    ) : (\n                      <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n                        <path d='M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z' />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n                {this.state.menuOpen ? <style>{`body{overflow:hidden;}`}</style> : null}\n                <div\n                  style={\n                    this.state.menuOpen\n                      ? {\n                          transform: `translateX(${Math.max(0, this.state.menuPosition)}px)`,\n                        }\n                      : {}\n                  }\n                  className={`navbar-sidebar ${this.state.menuOpen && this.state.menuDragging ? 'dragging' : ''} ${\n                    this.state.menuOpen ? 'open' : 'closed'\n                  }`}\n                >\n                  {infoButtons}\n                  <div className='spacer'></div>\n                  {mainButtons}\n                  <div className='spacer'></div>\n                  {authArea}\n                </div>\n              </>\n            ) : (\n              <div className='navbar'>\n                <div className='left'>\n                  {logoButton}\n                  {infoButtons}\n                </div>\n                <div className='right'>\n                  {mainButtons}\n                  {authArea}\n                </div>\n              </div>\n            )}\n          </ResponsiveContainer>\n        </div>\n        <div\n          className={`navbar-overlay ${this.state.menuBtnBeenClicked ? (this.state.mobile && this.state.menuOpen ? 'displayed' : 'hidden') : ''}`}\n        ></div>\n      </>\n    );\n  }\n}\nexport default NavBar;\n",["222","223"],"/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/App.js",[],"/Users/fred/Desktop/code/squadguessr/src/reportWebVitals.js",[],["224","225"],"/Users/fred/Desktop/code/squadguessr/src/components/ResponsiveContainer/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/TertiaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Loading/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Pitch/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/AuthModal/index.js",[],["226","227"],"/Users/fred/Desktop/code/squadguessr/src/components/PitchTop/index.js",[],["228","229"],"/Users/fred/Desktop/code/squadguessr/src/pages/Home/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/SquadsDatabase/dropdown.js",[],"/Users/fred/Desktop/code/squadguessr/src/index.js",["230","231","232","233","234"],"/Users/fred/Desktop/code/squadguessr/src/components/SecondaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PrimaryButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Modal/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ProfileModal/index.js",["235","236","237"],"/Users/fred/Desktop/code/squadguessr/src/lib/stats.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Leaderboard/index.js",["238","239"],"import './styles.css';\nimport React, { useEffect, useState } from 'react';\nimport { APIBaseURL, siteTitle } from '../../lib/config';\nimport { processDate, processRankNumber } from '../../lib/utils';\nimport { ProfileModal, Loading } from '../../components/';\nimport { Helmet } from 'react-helmet';\n\nexport default function Leaderboard(props) {\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [profileModal, setProfileModal] = useState(false);\n  const [profileUser, setProfileUser] = useState({});\n  useEffect(() => {\n    setTimeout(() => {\n      (async () => {\n        const fetchedData = await (await fetch(`${APIBaseURL}/api/profiles/top/100/`)).json();\n        setData(fetchedData);\n        setLoaded(true);\n      })();\n    }, 100);\n  }, []);\n  return (\n    <>\n      <div className='leaderboard-page page panel'>\n        <h1 className='title'>Leaderboard</h1>\n        <p className='description'>The top players, ranked by rating.</p>\n        <table className='leaderboard styled-table'>\n          <thead>\n            <tr>\n              <th>Rank</th>\n              <th>Username</th>\n              <th>Rating</th>\n              <th>Games Played</th>\n              <th>Date Joined</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((e, i) => (\n              <tr\n                className='row'\n                key={i}\n                onClick={() => {\n                  setProfileModal(true);\n                  (async () => {\n                    const fetchedData = await (await fetch(`${APIBaseURL}/api/profiles/user/${e.user._id}/`)).json();\n                    setProfileUser({ ...fetchedData, leaderboardPosition: i + 1 });\n                  })();\n                }}\n              >\n                <td className='number'>\n                  {i < 3 ? <i className={`fas fa-trophy trophy_${i + 1}`}></i> : null}\n                  {processRankNumber(i + 1)}\n                </td>\n                <td className='username'>\n                  @{e.user.username} {props.user.user && props.user.user._id === e.user._id ? '(you)' : ''}\n                </td>\n                <td className='rating'>{e.rating}</td>\n                <td className='gamesplayed'>{e.gamesPlayedCount}</td>\n                <td className='date'>{processDate(new Date(e.user.date))}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {loaded ? null : (\n          <div style={{ textAlign: 'center', marginTop: '1rem' }}>\n            <Loading style={{ display: 'inline-block' }} />\n          </div>\n        )}\n      </div>\n      {profileModal ? (\n        <ProfileModal\n          outerPageTitle='Leaderboard'\n          profileIsSignedIn={false}\n          setProfileModal={(v) => {\n            setProfileModal(v);\n            if (v === false) {\n              setProfileUser({});\n            }\n          }}\n          profile={profileUser}\n          {...(props.loggedIn && profileUser.user\n            ? props.user.user && props.user.user._id === profileUser.user._id\n              ? { profileIsSignedIn: true }\n              : ''\n            : {})}\n        />\n      ) : null}\n    </>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/lib/starIcons.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/utils.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Formation/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Home/animatedNumber.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/config.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/Footer/index.js",["240"],"/Users/fred/Desktop/code/squadguessr/src/pages/Play/game.js",["241"],"/* eslint-disable no-restricted-globals */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Formation,\n  Pitch,\n  PitchTop,\n  PrimaryButton,\n  ResponsiveContainer,\n  SecondaryButton,\n  TeamInformationTable,\n  TeamSheetTable,\n  TertiaryButton,\n  ShareBox,\n  ShareButton,\n} from '../../components';\nimport { APIBaseURL, siteTitle } from '../../lib/config';\nimport getStats from '../../lib/stats';\nimport { getAverageRating } from '../../lib/utils';\nimport './game-styles/details.css';\nimport './game-styles/extras-section.css';\nimport './game-styles/guessteam.css';\nimport './game-styles/misc.css';\nimport './game-styles/mobile.css';\n\nconst axios = require('axios');\n\nexport default function Game(props) {\n  const [gameData, setGameData] = useState({\n    wrongTeams: [],\n    teamFormation: [],\n    correctTeam: '',\n    teams: [],\n    doneGuessing: false,\n  });\n\n  const [showRatings, setShowRatings] = useState(false);\n  const [showTransferBudget, setShowTransferBudget] = useState(false);\n  const [nameLettersShown, setNameLettersShown] = useState([]);\n  const [teamsEliminated, setTeamsEliminated] = useState([]);\n  const [activeTab, setActiveTab] = useState('main-section');\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const endGame = (gaveUp = false) => {\n    if (!gameComplete) {\n      // game has not already ended\n      setGameComplete(true);\n\n      const currentGameOverData = {\n        type: props.dailyChallenge ? 'dailychallenge' : 'nationality',\n        league: props.league,\n        correctAnswer: gameData.correctTeam,\n        correctAnswerRating: getAverageRating(gameData.fifaMiscData.ratings),\n        won: !gaveUp,\n        hintsUsed: [teamsEliminated.length > 0, nameLettersShown.length > 0, showRatings, showTransferBudget].filter((e) => e === true).length,\n        wrongGuesses: gameData.wrongTeams.length,\n      };\n\n      if (props.loggedIn) {\n        const token = localStorage.getItem('authtoken');\n        axios({\n          method: 'put',\n          baseURL: APIBaseURL,\n          url: `/api/profiles/me/game/`,\n          data: currentGameOverData,\n          headers: {\n            'x-auth-token': token,\n          },\n        })\n          .catch((err) => {\n            try {\n              alert(err.response.data.errors[0].msg);\n            } catch (err) {\n              alert('Error: Internal or Server Error Occurred');\n            }\n          })\n          .then(() => {\n            props.reloadUser(true);\n          });\n      }\n    }\n  };\n\n  const guessTeam = (e) => {\n    if (e === gameData.correctTeam) {\n      setGameData({ ...gameData, doneGuessing: true });\n      endGame();\n    } else {\n      setGameData({ ...gameData, wrongTeams: [...gameData.wrongTeams, e] });\n    }\n  };\n\n  const initializeGame = async () => {\n    const { league, correctTeamName } = props;\n    const data = await (await fetch(`${APIBaseURL}/teams/by-league/onlynamesandlogos/${league}`)).json();\n    const teamAPIURL = `${APIBaseURL}/team/${correctTeamName}`;\n\n    const { name, formation, ...extraData } = await (await fetch(teamAPIURL)).json();\n\n    setGameData({\n      wrongTeams: [],\n      teamFormation: formation,\n      correctTeam: name,\n      teams: data,\n      ...extraData,\n    });\n    setShowRatings(false);\n    setShowTransferBudget(false);\n    setNameLettersShown([]);\n    setTeamsEliminated([]);\n    setActiveTab('main-section');\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  return (\n    <div className='game-outer-container'>\n      <ShareButton />\n      <ResponsiveContainer>\n        <style>\n          {`.navbar-container {\n          background-color: rgba(44, 62, 80, 0.8);\n          box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15);\n        }\n      `}\n        </style>\n        <div className='fullheight-section bynationalitypage gamepage' activetab={activeTab}>\n          <div className='tab-select'>\n            <div className='tab-select-row'>\n              <div className='bg'></div>\n              <button className='main-section' onClick={() => setActiveTab('main-section')}>\n                <i className='fas fa-users'></i>&nbsp; Squad\n              </button>\n              <button className='guess-section' onClick={() => setActiveTab('guess-section')}>\n                <i className='fas fa-play'></i>&nbsp; Guess\n              </button>\n              <button className='misc-section' onClick={() => setActiveTab('misc-section')}>\n                <i className='fas fa-toolbox'></i>&nbsp; Hints &amp; Stats\n              </button>\n            </div>\n          </div>\n          <div className='side-section guess-section'>\n            <div className={`panel side-panel guessteam ${gameData.doneGuessing ? 'doneguessing' : ''}`}>\n              <h1 className='title'>\n                {gameData.doneGuessing ? (\n                  <>\n                    <i className='fas fa-check mr'></i> Correct\n                  </>\n                ) : (\n                  <>\n                    <i className='fas fa-play mr'></i> Make a Guess\n                  </>\n                )}\n              </h1>\n              <div className='teams'>\n                {gameData.teams.map((e, i) => {\n                  const { name } = e;\n                  const isWrong = gameData.wrongTeams.indexOf(name) > -1;\n                  const isCorrect = name === gameData.correctTeam && gameData.doneGuessing;\n                  return (\n                    <PrimaryButton\n                      key={`${i}${isWrong ? '-wrong' : ''}`}\n                      className={`button ${isWrong ? 'wrong' : ''} ${isCorrect || isWrong ? 'active' : ''} ${\n                        teamsEliminated.indexOf(i) > -1 ? 'disabled' : ''\n                      }`}\n                      color={isWrong ? 'var(--danger)' : 'var(--primary)'}\n                      style={{ '--bg-url': `url(${e.logoURL})` }}\n                      text={`${name} ${isWrong ? '' : ''}${isCorrect ? '' : ''}`}\n                      onClick={\n                        isWrong\n                          ? () => {}\n                          : () => {\n                              guessTeam(name);\n                            }\n                      }\n                    />\n                  );\n                })}\n              </div>\n              <div className='bottom-buttons'>\n                {gameData.doneGuessing && !props.dailyChallenge ? (\n                  <TertiaryButton\n                    className='newchallenge'\n                    onClick={() => {\n                      props.openNewGame();\n                    }}\n                    text={<>New Game &rarr;</>}\n                  />\n                ) : null}\n                <TertiaryButton\n                  className='light'\n                  onClick={\n                    gameData.doneGuessing\n                      ? () => {\n                          setGameData({ ...gameData, doneGuessing: false, wrongTeams: [] });\n                        }\n                      : () => {\n                          endGame(true);\n                          setGameData({ ...gameData, doneGuessing: true });\n                        }\n                  }\n                  text={\n                    gameData.doneGuessing ? (\n                      <>\n                        Hide Answer <i className='fas fa-eye-slash ml'></i>\n                      </>\n                    ) : (\n                      <>\n                        Show Answer <i className='fas fa-eye ml'></i>\n                      </>\n                    )\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className='panel main main-section'>\n            <Pitch />\n            <PitchTop\n              showAnswer={gameData.doneGuessing || showRatings || showTransferBudget || nameLettersShown.length > 0}\n              showLeague={!props.dailyChallenge}\n              showTeamName={gameData.doneGuessing || nameLettersShown.length > 0}\n              showTeamLogo={gameData.doneGuessing}\n              teamLogoURL={gameData.logoURL}\n              teamName={gameData.correctTeam.split('').map((l, i) => {\n                const fillerLetter = l === ' ' ? <>&nbsp; </> : '_ ';\n                const letter = l + ' ';\n                const showLetter = !gameData.doneGuessing && nameLettersShown.indexOf(i) > -1;\n                return (\n                  <span key={i} style={gameData.doneGuessing ? {} : { textTransform: 'uppercase' }}>\n                    {gameData.doneGuessing ? l : showLetter ? letter : fillerLetter}\n                  </span>\n                );\n              })}\n              showStars={gameData.stars && (gameData.doneGuessing || showRatings)}\n              stars={gameData.stars}\n              showTransferBudget={gameData.fifaMiscData && (gameData.doneGuessing || showTransferBudget)}\n              transferBudgetDollars={gameData.fifaMiscData ? gameData.fifaMiscData.transferBudgetDollars : 0}\n              showRatings={gameData.fifaMiscData && (gameData.doneGuessing || showRatings)}\n              ratings={gameData.fifaMiscData ? gameData.fifaMiscData.ratings : { defense: 0, attack: 0, midfield: 0 }}\n              league={props.league ? props.league : ''}\n            />\n            <Formation\n              showAnswer={gameData.doneGuessing}\n              isGame={true}\n              players={gameData.teamFormation.map((player, i) => {\n                return {\n                  gameType: props.formationTypes[i],\n                  alternateTeamImageURL: player.nationality.flagURL.split('/2/').join('/6/'),\n                  alternateTeamName: player.nationality.name,\n                  imageURL: player.photoURL.split('/5/').join('/6/'),\n                  x: player.positionCoords.x,\n                  y: player.positionCoords.y,\n                  name: player.shortName,\n                  fullName: player.name,\n                  age: player.age,\n                  fifaRating: player.fifaRating,\n                };\n              })}\n            />\n          </div>\n          <div className='side-section extras-section misc-section'>\n            {props.dailyChallenge ? (\n              <div className='panel side-panel dailychallenge'>\n                <h1 className='title'>\n                  Daily <br />\n                  Challenge\n                </h1>\n                <div className='title-number'>\n                  <h1>{['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][props.dailyChallengeDate.month - 1]}</h1>\n                  <p>{props.dailyChallengeDate.day}</p>\n                </div>\n              </div>\n            ) : null}\n            <a href={props.dailyChallenge ? '/daily' : '/play'}>\n              <SecondaryButton className='menu-btn' text={<>&larr; Back to Menu</>} />\n            </a>\n\n            <div className='panel side-panel hints'>\n              <h1 className='title'>\n                <i className='fas fa-list mr'></i> Hints\n              </h1>\n              <PrimaryButton\n                className={teamsEliminated.length > 0 ? 'disabled' : ''}\n                onClick={() => {\n                  const newTeamsEliminated = [];\n                  while (newTeamsEliminated.length < Math.floor(gameData.teams.length / 2)) {\n                    const randIdx = Math.floor(Math.random() * gameData.teams.length);\n                    if (newTeamsEliminated.indexOf(randIdx) === -1 && gameData.teams[randIdx].name !== gameData.correctTeam)\n                      newTeamsEliminated.push(randIdx);\n                  }\n                  setTeamsEliminated(newTeamsEliminated);\n                }}\n                color='var(--primary)'\n                text='Reduce Guess Pool by 50%'\n              />\n              <PrimaryButton\n                color='var(--primary)'\n                className={nameLettersShown.length > 0 ? 'disabled' : ''}\n                onClick={() => {\n                  const newNameLettersShown = [];\n                  while (newNameLettersShown.length < 1) {\n                    const randIdx = Math.floor(Math.random() * gameData.correctTeam.length);\n                    if (newNameLettersShown.indexOf(randIdx) > -1) continue;\n                    if (gameData.correctTeam[randIdx] === ' ') continue;\n                    newNameLettersShown.push(randIdx);\n                  }\n                  setNameLettersShown(newNameLettersShown);\n                }}\n                text='Show 1 Letter of Team Name'\n              />\n              <PrimaryButton\n                className={showRatings ? 'disabled' : ''}\n                onClick={() => {\n                  setShowRatings(true);\n                }}\n                color='var(--primary)'\n                text='Show Team Ratings'\n              />\n              <PrimaryButton\n                className={showTransferBudget ? 'disabled' : ''}\n                onClick={() => {\n                  setShowTransferBudget(true);\n                }}\n                color='var(--primary)'\n                text='Show Transfer Budget'\n              />\n            </div>\n            <div className='panel side-panel stats'>\n              <h1 className='title'>\n                <i className='fas fa-calculator mr'></i> Stats\n              </h1>\n              {props.loggedIn ? (\n                <div className='container'>\n                  <div className='row'>\n                    {[\n                      ['Rating', props.user.rating],\n                      ['Leaderboard', `#${props.user.leaderboardPosition}`],\n                    ].map((e, i) => (\n                      <div className='title-number' key={i}>\n                        <h1>{e[0]}</h1>\n                        <p>{e[1]}</p>\n                      </div>\n                    ))}\n                  </div>\n                  {[\n                    [\n                      `${props.dailyChallenge ? 'Daily Challenge' : props.league} w/l Ratio`,\n                      (() => {\n                        const wl = getStats(props.user.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : props.league, 'win-loss');\n                        const wlPercent = Math.round((wl[0] / (wl[0] + wl[1])) * 100);\n                        return (\n                          <>\n                            {wl[0]}:{wl[1]} <span>~{isNaN(wlPercent) ? '0' : wlPercent}%</span>\n                          </>\n                        );\n                      })(),\n                    ],\n                    [\n                      `${props.dailyChallenge ? 'Daily Challenge' : props.league} Streak`,\n                      <>\n                        {getStats(props.user.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : props.league, 'streak')} <span>games</span>\n                      </>,\n                    ],\n                    [\n                      `${props.dailyChallenge ? 'Daily Challenge' : props.league} Best Streak`,\n                      <>\n                        {getStats(props.user.gamesPlayed, props.dailyChallenge ? 'dailychallenge' : props.league, 'longest-streak')}{' '}\n                        <span>games</span>\n                      </>,\n                    ],\n                  ].map((e, i) => (\n                    <div className='title-number' key={i}>\n                      <h1>{e[0]}</h1>\n                      <p>{e[1]}</p>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <PrimaryButton\n                  text={\n                    <>\n                      <i className='fas fa-sign-in-alt mr'></i>Sign In To Get Stats\n                    </>\n                  }\n                  onClick={() => props.setAuthModal(true, true)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <div className={`panel details-section ${gameData.doneGuessing ? '' : 'blurred'}`}>\n          <div className='left'>\n            <h1 className='details-title'>\n              <i className='fas fa-th-list mr'></i>Team Sheet\n            </h1>\n            <TeamSheetTable players={gameData.teamFormation} includeRatingPotential={false} />\n          </div>\n          <div className='right'>\n            <div className='team-information'>\n              <h1 className='details-title'>\n                <i className='fas fa-info-circle mr'></i>Team Information\n              </h1>\n              <TeamInformationTable\n                squad={{\n                  name: gameData.correctTeam,\n                  fifaMiscData: {\n                    ratings: gameData.fifaMiscData ? gameData.fifaMiscData.ratings : { defense: 0, attack: 0, midfield: 0 },\n                    transferBudgetDollars: gameData.fifaMiscData ? gameData.fifaMiscData.transferBudgetDollars : 0,\n                  },\n                }}\n              />\n            </div>\n            <ShareBox />\n            <div className='how-to'>\n              <h1 className='details-title'>\n                <i className='fas fa-question-circle mr'></i>How To Play\n              </h1>\n              <p>{siteTitle} is a puzzle game where players try to guess a given squad based on limited information.</p>\n              <ul>\n                <li>To make a guess, click on your guess on the bar on the left.</li>\n                <li>To give up and see the answer, click the Show Answer button.</li>\n                <li>\n                  If you're signed in, showing the answer or making three wrong guesses counts as a loss and will decrease your rating accordingly.\n                </li>\n                <li>If you're having trouble with a game, try using a hint.</li>\n              </ul>\n              <p>{/* <em style={{ opacity: 0.6 }}>&mdash; Gabriel Romualdo, April 2021</em> */}</p>\n            </div>\n          </div>\n        </div>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","/Users/fred/Desktop/code/squadguessr/src/pages/Play/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/LeagueButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/leagueInfo.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/TeamSheetTable/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/TeamInformationTable/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PlayModal/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/PlayButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ScrollToTop/index.js",["242"],"import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return null;\n}\n\nexport default withRouter(ScrollToTop);\n","/Users/fred/Desktop/code/squadguessr/src/components/FullHeightLoading/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/gameCode.js",["243"],"/*\nThis program encodes and decodes gamepins. Contrary to some applications,\ngamepins on this site actually encode the game settings and game information,\nand nothing is stored or fetched from the backend.\n*/\n\nimport assert from 'assert';\n\n// currently only uppercase chars are used\n// include more chars here to logorithmically decrease overall pin size\n// const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n// use a shuffled alphabet simply to make it less obvious for a user to decode codes alphanumerically (and basically cheat at the game, albeit in a very clever manner)\nconst characters = 'KCTOWQVLIGPBEMYSFHANXZJDUR'.split('');\n\nfunction logBase(base, number) {\n  return Math.log(number) / Math.log(base);\n}\nconst padArrayWithZeros = (arr, length) => {\n  if (length && length > arr.length) {\n    return new Array(length - arr.length).fill(0).concat(arr);\n  }\n  return arr;\n};\nconst toBase = (number, toBase, length) => {\n  let digitMultiplier = toBase ** Math.floor(logBase(toBase, number));\n  let result = [];\n  while (digitMultiplier >= 1) {\n    const newDigit = Math.floor(number / digitMultiplier);\n    result.push(newDigit);\n    number -= newDigit * digitMultiplier;\n    digitMultiplier /= toBase;\n  }\n  if (length) {\n    result = padArrayWithZeros(result, length);\n  }\n  return result;\n};\nconst fromBase = (digitsArr, fromBase) => {\n  let result = 0;\n  digitsArr.forEach((digit, i) => {\n    let digitMultiplier = fromBase ** (digitsArr.length - 1 - i);\n    result += digitMultiplier * digit;\n  });\n  return result;\n};\n\nconst toChars = (number, length) => {\n  const base = characters.length;\n  let result = toBase(number, base)\n    .map((e) => characters[e])\n    .join('');\n  if (length && result.length < length) {\n    result = characters[0].repeat(length - result.length) + result;\n  }\n  return result;\n};\nconst fromChars = (str) => {\n  const base = characters.length;\n  return fromBase(\n    str.split('').map((e) => characters.indexOf(e)),\n    base\n  );\n};\n\nconst boolArrToBinaryArr = (boolArr) => boolArr.map((e) => +e); // this unary operator thing is an absolute genius move\nconst binaryArrToBoolArr = (binaryArr) => binaryArr.map((e) => [false, true][e]);\n\n// Example values:\n// console.log(toBase(6789324, 26)); // --> [14, 22, 7, 9, 22]\n// console.log(fromBase([14, 22, 7, 9, 22], 26)); // --> 6789324\n// console.log(toChars(6789324)); // --> 'OWHJW'\n// console.log(fromChars('OWHJW')); // --> 6789324\n\nconst LEAGUE_AND_GAMEMODE_LENGTH = 3;\nconst GAME_LENGTH = 2;\nconst GAMEMODE_SIZE = 8;\nconst FORMATION_SIZE = 11;\nconst GAMEMODE_NUMBER_CEILING = 2 ** GAMEMODE_SIZE;\n\n// NOTE:\n//    (let CLENGTH be characters.length)\n//  - the max of the league value is floor(CLENGTH^LEAGUE_GAMEMODE_LENGTH / 2^GAMEMODE_SIZE), which is 68 at the moment (I think)\n//  - the max of the game value is CLENGTH^GAME_LENGTH, which is 676 at the moment\n//  - elements in the formation list must be integers in the range [0, GAMEMODE_SIZE - 1]\n\nconst encodeGameCode = (leagueNumber, gameMode, game, formation) => {\n  assert(gameMode.length === GAMEMODE_SIZE);\n  assert(formation.length === FORMATION_SIZE);\n\n  const gameModeNumber = fromBase(boolArrToBinaryArr(gameMode), 2);\n\n  const gameModeEnabledCount = gameMode.filter((e) => e === true).length;\n  const gameModeEnabledIndices = gameMode.reduce((acc, e, i) => (e ? acc.concat([i]) : acc), []);\n\n  const numbers = [\n    leagueNumber * GAMEMODE_NUMBER_CEILING + gameModeNumber,\n    game,\n    fromBase(\n      formation.map((e) => gameModeEnabledIndices.indexOf(e)),\n      gameModeEnabledCount\n    ),\n  ];\n  return toChars(numbers[0], LEAGUE_AND_GAMEMODE_LENGTH) + toChars(numbers[1], GAME_LENGTH) + toChars(numbers[2]);\n};\nconst decodeGameCode = (data) => {\n  const leagueAndGameModeNumber = fromChars(data.substring(0, LEAGUE_AND_GAMEMODE_LENGTH));\n  const leagueNumber = Math.floor(leagueAndGameModeNumber / GAMEMODE_NUMBER_CEILING);\n  const gameModeNumber = leagueAndGameModeNumber % GAMEMODE_NUMBER_CEILING;\n  const gameMode = binaryArrToBoolArr(toBase(gameModeNumber, 2, GAMEMODE_SIZE));\n\n  const gameModeEnabledCount = gameMode.filter((e) => e === true).length;\n  const gameModeEnabledIndices = gameMode.reduce((acc, e, i) => (e ? acc.concat([i]) : acc), []);\n\n  const game = fromChars(data.substring(LEAGUE_AND_GAMEMODE_LENGTH, LEAGUE_AND_GAMEMODE_LENGTH + GAME_LENGTH));\n  const formation = padArrayWithZeros(\n    toBase(fromChars(data.substring(LEAGUE_AND_GAMEMODE_LENGTH + GAME_LENGTH)), gameModeEnabledCount),\n    FORMATION_SIZE\n  ).map((e) => gameModeEnabledIndices[e]);\n\n  assert(gameMode.length === GAMEMODE_SIZE);\n  assert(formation.length === FORMATION_SIZE);\n\n  return {\n    leagueNumber,\n    gameMode,\n    game,\n    formation,\n  };\n};\n\nconst testEncodeAndDecode = () => {\n  let failures = 0;\n  const count = 69420;\n  for (let i = 0; i < count; i++) {\n    const gameMode = binaryArrToBoolArr([\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n      Math.floor(Math.random() * 2),\n    ]);\n    if (gameMode.filter((e) => e === true).length === 0) {\n      gameMode[0] = true;\n    }\n    const enabledGameModeIndices = [];\n    gameMode.forEach((e, i) => {\n      if (e) enabledGameModeIndices.push(i);\n    });\n\n    const data = {\n      leagueNumber: Math.floor(Math.random() * 42),\n      gameMode,\n      game: Math.floor(Math.random() * 676),\n      formation: (() => {\n        const ret = [];\n        for (let i = 0; i < 11; i++) {\n          ret.push(enabledGameModeIndices[Math.floor(Math.random() * enabledGameModeIndices.length)]);\n        }\n        return ret;\n      })(),\n    };\n    const encoded = encodeGameCode(data.leagueNumber, data.gameMode, data.game, data.formation);\n    const decoded = decodeGameCode(encoded);\n    if (JSON.stringify(decoded) !== JSON.stringify(data)) {\n      console.log('Failure: ' + encoded);\n      failures++;\n    } else {\n      console.log('Success: ' + encoded);\n    }\n  }\n  console.log(`Failures Count: ${failures}`);\n  console.log(`Total Count: ${count}`);\n};\n// testEncodeAndDecode();\n\nexport { encodeGameCode, decodeGameCode };\n","/Users/fred/Desktop/code/squadguessr/src/lib/gameTypes.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/ShareBox/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/NotAvailableOnMobileBanner/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/LargeCalendar/index.js",["244"],"/Users/fred/Desktop/code/squadguessr/src/components/PageHeader/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/getNumberEnding.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/LinedHeader/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/DailyChallenge/DailyChallengeGame.js",["245"],"/Users/fred/Desktop/code/squadguessr/src/components/ShareButton/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/FAQ/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/Instructions/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/lib/getNewGamePath.js",[],"/Users/fred/Desktop/code/squadguessr/src/pages/About/index.js",[],"/Users/fred/Desktop/code/squadguessr/src/components/CookiesBanner/index.js",[],{"ruleId":"246","severity":1,"message":"247","line":3,"column":27,"nodeType":"248","messageId":"249","endLine":3,"endColumn":33},{"ruleId":"246","severity":1,"message":"250","line":3,"column":35,"nodeType":"248","messageId":"249","endLine":3,"endColumn":41},{"ruleId":"246","severity":1,"message":"251","line":3,"column":43,"nodeType":"248","messageId":"249","endLine":3,"endColumn":48},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"252","replacedBy":"256"},{"ruleId":"254","replacedBy":"257"},{"ruleId":"252","replacedBy":"258"},{"ruleId":"254","replacedBy":"259"},{"ruleId":"252","replacedBy":"260"},{"ruleId":"254","replacedBy":"261"},{"ruleId":"246","severity":1,"message":"262","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":23},{"ruleId":"246","severity":1,"message":"247","line":5,"column":27,"nodeType":"248","messageId":"249","endLine":5,"endColumn":33},{"ruleId":"246","severity":1,"message":"250","line":5,"column":35,"nodeType":"248","messageId":"249","endLine":5,"endColumn":41},{"ruleId":"246","severity":1,"message":"251","line":5,"column":43,"nodeType":"248","messageId":"249","endLine":5,"endColumn":48},{"ruleId":"246","severity":1,"message":"263","line":5,"column":50,"nodeType":"248","messageId":"249","endLine":5,"endColumn":54},{"ruleId":"246","severity":1,"message":"264","line":5,"column":42,"nodeType":"248","messageId":"249","endLine":5,"endColumn":51},{"ruleId":"246","severity":1,"message":"265","line":5,"column":53,"nodeType":"248","messageId":"249","endLine":5,"endColumn":57},{"ruleId":"246","severity":1,"message":"266","line":5,"column":103,"nodeType":"248","messageId":"249","endLine":5,"endColumn":109},{"ruleId":"246","severity":1,"message":"267","line":3,"column":22,"nodeType":"248","messageId":"249","endLine":3,"endColumn":31},{"ruleId":"246","severity":1,"message":"268","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":36,"column":69,"nodeType":"271","endLine":36,"endColumn":84},{"ruleId":"272","severity":1,"message":"273","line":116,"column":6,"nodeType":"274","endLine":116,"endColumn":8,"suggestions":"275"},{"ruleId":"272","severity":1,"message":"276","line":12,"column":6,"nodeType":"274","endLine":12,"endColumn":8,"suggestions":"277"},{"ruleId":"246","severity":1,"message":"278","line":131,"column":7,"nodeType":"248","messageId":"249","endLine":131,"endColumn":26},{"ruleId":"246","severity":1,"message":"279","line":2,"column":17,"nodeType":"248","messageId":"249","endLine":2,"endColumn":25},{"ruleId":"272","severity":1,"message":"280","line":26,"column":6,"nodeType":"274","endLine":26,"endColumn":8,"suggestions":"281"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["282"],"no-negated-in-lhs",["283"],["282"],["283"],["282"],["283"],["282"],["283"],"'reportWebVitals' is defined but never used.","'Link' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Legend' is defined but never used.","'siteTitle' is defined but never used.","'Helmet' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializeGame'. Either include it or remove the dependency array.","ArrayExpression",["284"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["285"],"'testEncodeAndDecode' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'loaded' and 'props.date'. Either include them or remove the dependency array.",["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [initializeGame]",{"range":"293","text":"294"},"Update the dependencies array to be: [history]",{"range":"295","text":"296"},"Update the dependencies array to be: [loaded, props.date]",{"range":"297","text":"298"},[3459,3461],"[initializeGame]",[269,271],"[history]",[1021,1023],"[loaded, props.date]"]